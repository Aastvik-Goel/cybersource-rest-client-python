name: PYTHON BUILDS
on:
  push:
  pull_request:
  workflow_dispatch:
env:
  CLIENT_FOLDER: 'cybersource-rest-client-python'
  SAMPLE_FOLDER: 'cybersource-rest-samples-python'
jobs:
    workflow-job:
        defaults:
            run:
              shell: bash
        strategy:
            fail-fast: false
            matrix:
              operating-system: [ubuntu-latest,macos-latest,windows-latest]
              pyth-version: ['3.6','3.7','3.8','3.9','3.10','3.11','3.12']
              include:
                - operating-system: ubuntu-20.04   # Checking support for ubuntu os with python 3.6
                  pyth-version: '3.6'
                - operating-system: macos-13   # Checking support for mac os with python 3.6
                  pyth-version: '3.6'
                - operating-system: macos-13   # Checking support for mac os with python 3.7
                  pyth-version: '3.7'
              exclude:
                - operating-system: ubuntu-latest  #arm 64 doesn't support python ver 3.7
                  pyth-version: '3.6'
                - operating-system: macos-latest  #arm 64 doesn't support python ver 3.6
                  pyth-version: '3.6'
                - operating-system: macos-latest  #arm 64 doesn't support python ver 3.7
                  pyth-version: '3.7'
        runs-on: ${{matrix.operating-system}}
        steps:
            - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
              if: runner.os == 'Windows'
              shell: pwsh
            - run: vcpkg install openssl:x64-windows-static-md
              if: runner.os == 'Windows'
              shell: pwsh
            - name: Creating separate folders for checkout repos
              run: |
                rm -rf $CLIENT_FOLDER
                rm -rf $SAMPLE_FOLDER
                mkdir $CLIENT_FOLDER $SAMPLE_FOLDER
            - name: Checkout cybersource-rest-client-python repo
              uses: actions/checkout@v4
              with:
                path: ${{env.CLIENT_FOLDER}}
            - name: Checkout cybersource-rest-samples-python repo
              uses: actions/checkout@v4
              with:
                repository: 'CyberSource/cybersource-rest-samples-python'
                ref: 'testing-branch' # this is used for checking out a particular branch in repo
                path: ${{env.SAMPLE_FOLDER}}
            - name: Install Python
              uses: actions/setup-python@v5
              with:
                python-version: ${{matrix.pyth-version}}
            - name: Building the projects and running the Test Cases
              run: |
                python --version
                python -m pip install --upgrade pip
                python -m venv ve
                if [[ "$(uname -s)" == "Linux" ]]; then
                    echo "In LINUX"
                    source ve/bin/activate
                elif [[ "$(uname -s)" == "Darwin" ]]; then
                    echo "In MAC"
                    source ve/bin/activate
                else
                    echo "In Windows"
                    source ve/Scripts/activate
                    # version=$(python3 --version 2>&1 | awk '{print $2}')
                    # if [[ $version == 3.7.* ]]; then
                    #   pip install cryptography==41.0.7
                    # fi
                    # # check if python version is 3.7 then "pip install cryptography==41.0.7"
                fi
                echo $VIRTUAL_ENV
                cd $CLIENT_FOLDER
                pip install -e .
                cd ..
                echo $VIRTUAL_ENV
                cd $SAMPLE_FOLDER
                pip install -e .
                # bash ./sample_code_runner.sh
                echo $VIRTUAL_ENV
            - name: Using Custom Action
              uses: ./.github/actions/generate-report
            # - name: Setup Python v3.12 for report generation only
            #   uses: actions/setup-python@v5
            #   with:
            #     python-version: 3.12
            # - name: Installing required python libraries and running the python programs to generate pdf report
            #   run : |
            #     python --version
            #     echo $VIRTUAL_ENV
            #     echo "Before Running Report Generation"
            #     echo "PWD" 
            #     pwd
            #     cd $SAMPLE_FOLDER
            #     python -m pip install --upgrade pip
            #     pip install json2html
            #     pip install xhtml2pdf
            #     pip install bs4
            #     cd Validation
            #     python sample_code_log_processor.py -l ../../$SAMPLE_FOLDER/output.log -o ../../$SAMPLE_FOLDER/python_actual_results.json
            #     python response_code_validator.py -e ExpectedResults/python_expected_results.json -a ../../$SAMPLE_FOLDER/python_actual_results.json -o python_validation_results.json
            #     python json_to_prettified_html.py -i python_validation_results.json -o python_validation_results.html
            #     cp python_validation_results.pdf ../  #copying the file to flaatten the directory of the upload artifact,Github Actions doesn't support that as of jun 2024
            # - name: Upload Test Reports
            #   uses: actions/upload-artifact@v4
            #   with:
            #     name: log-files-${{matrix.operating-system}}-python-ver-${{matrix.pyth-version}}
            #     path: |
            #       ${{env.SAMPLE_FOLDER}}/python_validation_results.pdf

# Adding comment 